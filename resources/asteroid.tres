[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://dkofraxorb5h"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_6kc6v"]
constant = Color(0.226707, 0.226707, 0.226707, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_sytfr"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_mmbpl"]
default_input_values = [0, 0.0, 1, 1.93]
operator = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ppfrb"]
noise_type = 0
seed = 138

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_pnnlx"]
width = 256
height = 256
seamless = true
noise = SubResource("FastNoiseLite_ppfrb")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_flstm"]
output_port_for_preview = 0
source = 5
texture = SubResource("NoiseTexture2D_pnnlx")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bso5a"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_dioo8"]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_y0tek"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_uim5h"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_lagmk"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_85c2t"]
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_bjfq5"]
parameter_name = "NoiseTexture"
qualifier = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D NoiseTexture;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// VectorDecompose:5
	float n_out5p0 = n_out3p0.x;
	float n_out5p1 = n_out3p0.y;
	float n_out5p2 = n_out3p0.z;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(NoiseTexture, UV);


// FloatOp:10
	float n_in10p1 = 1.93000;
	float n_out10p0 = n_out2p0.x * n_in10p1;


// FloatOp:7
	float n_out7p0 = n_out5p0 * n_out10p0;


// FloatOp:4
	float n_out4p0 = n_out5p1 * n_out10p0;


// FloatOp:8
	float n_out8p0 = n_out5p2 * n_out10p0;


// VectorCompose:6
	vec3 n_out6p0 = vec3(n_out7p0, n_out4p0, n_out8p0);


// Output:0
	VERTEX = n_out6p0;


}

void fragment() {
// ColorConstant:2
	vec4 n_out2p0 = vec4(0.226707, 0.226707, 0.226707, 1.000000);


// FloatConstant:4
	float n_out4p0 = 1.000000;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ROUGHNESS = n_out4p0;


}
"
graph_offset = Vector2(-376.241, 74.0483)
nodes/vertex/2/node = SubResource("VisualShaderNodeTexture_flstm")
nodes/vertex/2/position = Vector2(-600, 160)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_bso5a")
nodes/vertex/3/position = Vector2(-640, 60)
nodes/vertex/4/node = SubResource("VisualShaderNodeFloatOp_dioo8")
nodes/vertex/4/position = Vector2(-120, 280)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorDecompose_y0tek")
nodes/vertex/5/position = Vector2(-320, 20)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorCompose_uim5h")
nodes/vertex/6/position = Vector2(160, 120)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatOp_lagmk")
nodes/vertex/7/position = Vector2(-120, 160)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatOp_85c2t")
nodes/vertex/8/position = Vector2(-120, 400)
nodes/vertex/9/node = SubResource("VisualShaderNodeTexture2DParameter_bjfq5")
nodes/vertex/9/position = Vector2(-1040, 140)
nodes/vertex/10/node = SubResource("VisualShaderNodeFloatOp_mmbpl")
nodes/vertex/10/position = Vector2(-360, 180)
nodes/vertex/connections = PackedInt32Array(3, 0, 5, 0, 5, 0, 7, 0, 5, 1, 4, 0, 5, 2, 8, 0, 4, 0, 6, 1, 9, 0, 2, 2, 2, 0, 10, 0, 10, 0, 7, 1, 8, 0, 6, 2, 7, 0, 6, 0, 6, 0, 0, 0, 10, 0, 4, 1, 10, 0, 8, 1)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorConstant_6kc6v")
nodes/fragment/2/position = Vector2(140, 80)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_sytfr")
nodes/fragment/4/position = Vector2(120, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 4, 0, 0, 3)
